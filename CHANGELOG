---

20100716130043

* Xa non é necesario especificar o content_type nos constructores das clases contido. As clases que herdan de Content detectase automáticamente o tipo do contido a partires do nome da clase. IMPORTANTE que coincida o nome da clase co declarado na táboa content_types

<pre>
public function __construct($id=null)
{
    parent::__construct($id);
    
    if($id != null) {
        $this->read($id);
    }
    
    // sobra --> $this->content_type = 'Article';
}
</pre>
    
    
* Agora existe unha clase Onm_View que implementa o comportamento de Zend_View empregando smarty. Este cambio implica que unha vez se remate un método fooAction dun controlador BarController renderizarase a template correspondente co par nome_controller/nome_action.tpl: themes/default/tpl/bar/foo.tpl

    Evidentemente se nos aproveitamos deste comportamento non é necesario chamar a $this->tpl->display();
    
    Se o método fai unha redirección tampouco chama ao render da vista
    
    Para suprimir o "autorenderizado" de Onm_View podese deshabilitar o action helper para ese controlador no método init (útil en chamadas ajax que se fai directamente un echo):

<pre>
public function init()
{
    $viewRenderer = $this->_helper->getHelper('viewRenderer');
    $viewRenderer->setNoRender(true);
}
</pre>
    
    O feito de incluir Onm_View permítenos traballar co action helper ContextSwitch e AjaxContext
    


* "Autoassign" a template das propiedades públicas do controlador. As propiedades públicas, volvo repetir, as propiedades "públicas", (polo tanto é moi recomendable antepoñer a declaración da propiedade a palabra reservada public) son auto asignadas a template.

<pre>    
class WidgetController extends Onm_Controller_Action
{
    /**
     * @var array  Array of Widget
     */
    public $widgets = null;    
    
    /**
     * Route: widget-index
     *  /widget/index/*
     */
    public function indexAction()
    {
        $cm = new ContentManager();
        $this->widgets = $cm->find(...);
        
        // {$widgets} estará dispoñible para a template
        
        // ademais ao non deshabilitar o action helper viewRenderer ao rematar o método
        // chamarase ao display de smarty renderizando .../widget/index.tpl
    }
</pre>