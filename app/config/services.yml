services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: true

    application.log:
        alias: monolog.logger.applog

    error.log:
        alias: monolog.logger.errorlog

    monolog.formatter.standard:
        class: Monolog\Formatter\LineFormatter
        arguments:
            - "%%datetime%% | %%level_name%% | %%extra.user_agent%% | %%extra.client_ip%% | %%extra.url%% | %%extra.instance%% | %%extra.user%% | %%message%% %%context%%\n"

    monolog.processor.onm:
        class: Framework\Monolog\OnmFormatter
        arguments: [ '@service_container' ]
        tags:
            - { name: monolog.processor, method: processRecord }

    session.handler.drak.redis:
        class: Drak\NativeSession\NativeRedisSessionHandler
        arguments: ["%session_handler_savepath%"]

    session.handler.drak.memcached:
        class: Drak\NativeSession\NativeMemcachedSessionHandler
        arguments: ["%session_handler_savepath%", "%session_handler_options%"]

    shared_key_jwt_encoder:
        class: Lexik\Bundle\JWTAuthenticationBundle\Encoder\SharedKeyJWTEncoder
        arguments: [ "%shared_key_algorithm%", "%shared_key%" ]
