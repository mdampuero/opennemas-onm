imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

parameters:
    cache_prefix: onm
    available_languages: {'en_US' : "English", 'es_ES' : "Espa√±ol", 'gl_ES' : "Galego"}

framework:
    #esi:             ~
    translator:      { fallback: %locale% }
    secret:          %framework.secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enabled: true, enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: %framework.trusted_proxies%
    trusted_hosts:   ~
    session:
        name:            __onm_sess
        gc_maxlifetime:  %session.gc_maxlifetime%
        handler_id:      %session_handler_id%
    fragments:       ~
    http_method_override: true

sensio_framework_extra:
    router:   { annotations: false }
    request:  { converters: false }
    view:     { annotations: false }
    cache:    { annotations: false }
    security: { annotations: true }

opennemas:
    assetic:
        build_path:  "%kernel.root_dir%/cache"
        output_path: build/assets
        asset_url: asset_url
        site_url: false
        filters:
            uglifyjs:
                bin:  /usr/local/bin/uglifyjs
                node: /usr/bin/nodejs
            uglifycss:
                bin:  /usr/local/bin/uglifycss
                node: /usr/bin/nodejs

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:
        type: file
        path: "%kernel.root_dir%/spool"
    logging:  "%kernel.debug%"

monolog:
    channels: ["main", "applog"]
    handlers:
        main:
            type:  stream
            path:  %kernel.logs_dir%/%kernel.environment%.log
            level: error
        applog:
            type:  stream
            path:  %kernel.logs_dir%/application.log
            level: info
            channels: applog

services:
    session.memcache:
        class: Memcached
        calls:
             - [ addServer, [ %session_memcache_host%, %session_memcache_port% ]]

    session.handler.memcache:
        class: Symfony\Component\HttpFoundation\Session\Storage\Handler\MemcachedSessionHandler
        arguments: [ @session.memcache, { prefix: %session_memcache_prefix%, expiretime: %session_memcache_expire% } ]

    session.handler.drak.redis:
        class: Drak\NativeSession\NativeRedisSessionHandler
        arguments: [%session_handler_savepath%]

    session.handler.drak.memcached:
        class: Drak\NativeSession\NativeMemcachedSessionHandler
        arguments: [%session_handler_savepath%, %session_handler_options%]

    monolog.processor.instance_name:
        class: Framework\Monolog\InstanceNameFormatter
        tags:
            - { name: monolog.processor, method: processRecord, handler: applog }

    application.log:
        alias: monolog.logger.applog

hwi_oauth:
    firewall_name: backend
    resource_owners:
        facebook:
            type:          facebook
            client_id:     %api.facebook.client_id%
            client_secret: %api.facebook.client_secret%
            scope:         email
        twitter:
            type:          twitter
            client_id:     %api.twitter.client_id%
            client_secret: %api.twitter.client_secret%
