parameters:
    # Framework Base Configuration
    kernel.secret: "97)$7os7)mjh#_owo_3=)yw&2^!*=252n4w#5#rs8udy-3n5z)"
    framework:
        secret:          %secret%
        charset:         UTF-8
        csrf_protection: true
        default_locale:  %locale%

    # Swiftmailer Configuration
    swiftmailer:
        transport: %mailer_transport%
        host:      %mailer_host%
        username:  %mailer_user%
        password:  %mailer_password%
        protocol:  %mailer_protocol%
        port:      %mailer_port%
        spool:     { type: memory }

    cache_prefix: onm
    logger_level: normal

    # Session Configuration
    session_storage_class: "Symfony\Component\HttpFoundation\Session\Storage\\NativeSessionStorage"
    session_handler_class: "Symfony\Component\HttpFoundation\Session\Session"

    available_languages: {'en_US' : "English", 'es_ES' : "Espa√±ol", 'gl_ES' : "Galego"}

imports:
    - { resource: parameters.yml }

services:
    resolver:
        class: Onm\Framework\ControllerResolver

    listener.router:
        class: Symfony\Component\HttpKernel\EventListener\RouterListener
        arguments: [ @matcher ]
        tags:
            - { name: dispatcher.listener }

    listener.response:
        class: Symfony\Component\HttpKernel\EventListener\ResponseListener
        arguments: [ %charset% ]
        tags:
            - { name: dispatcher.listener }

    listener.instanceloader:
        class: Framework\EventListeners\InstanceLoaderListener
        tags:
            - { name: dispatcher.listener }

    listener.admin_auth:
        class: Framework\EventListeners\AdminAuthenticationListener
        tags:
            - { name: dispatcher.listener }

    listener.controller:
        class: Framework\EventListeners\ControllerListener
        tags:
            - { name: dispatcher.listener }

    listener.session:
        class: Framework\EventListeners\SessionListener
        tags:
            - { name: dispatcher.listener }

    listener.instance_exceptions:
        class: Framework\EventListeners\InstanceExceptionsListener
        tags:
            - { name: dispatcher.listener }

    listener.general_error_handler:
        class: Framework\EventListeners\GeneralExceptionsListener
        tags:
            - { name: dispatcher.listener }

    listener.app_bootup:
        class: Framework\EventListeners\ApplicationBootupListener
        tags:
            - { name: dispatcher.listener }

    listener.maintenance_mode:
        class: Framework\EventListeners\MaintenanceModeListener
        tags:
            - { name: dispatcher.listener }

    listener.l10n_system:
        class: Framework\EventListeners\L10nSystemListener
        tags:
            - { name: dispatcher.listener }

    listener.content_subscriber:
        class: Backend\EventListeners\ContentSubscriberListener
        tags:
            - { name: dispatcher.listener }

    listener.news_agency:
        class: Framework\EventListeners\NewsAgencyListener
        tags:
            - { name: dispatcher.listener }

    listener.varnish_cleaner:
        class: Framework\EventListeners\VarnishCleanerListener
        tags:
            - { name: dispatcher.listener }

    dispatcher:
        class: Symfony\Component\EventDispatcher\EventDispatcher

    framework:
        class: Onm\Framework\Framework
        arguments: [ @dispatcher, @resolver ]

    db_conn:
        class: Onm\DatabaseConnection
        arguments: [ %database% ]

    db_conn_manager:
        class: Onm\DatabaseConnection
        arguments: [  %database% ]

    session_storage:
        class: %session_storage_class%
        arguments: [ %session_params% ]

    session:
        class: %session_handler_class%
        arguments: [ @session_storage ]

    logger:
        class: Onm\Log
        arguments: [ %logger_level% ]

    mailer:
        class: Onm\Mailer
        arguments: [ %swiftmailer% ]

    cache:
        class: %cache_handler%
        arguments: [ %cache_handler_params% ]

    category_repository:
        class: Repository\CategoryManager
        arguments: [ @cache, %cache_prefix% ]

    comment_repository:
        class: Repository\CommentManager
        arguments: [ @cache, %cache_prefix% ]

    entity_repository:
        class: Repository\EntityManager
        arguments: [ @cache, %cache_prefix% ]

    user_repository:
        class: Repository\UserManager
        arguments: [ @cache, %cache_prefix% ]

    menu_repository:
        class: Repository\MenuManager
        arguments: [ @cache, %cache_prefix% ]

    usergroup_repository:
        class: Repository\UserGroupManager
        arguments: [ @cache, %cache_prefix% ]

    setting_repository:
        class: Repository\SettingManager
        arguments: [ @cache, %cache_prefix% ]

    newsletter_manager:
        class: Repository\NewsletterManager
        arguments: [ @mailer, @logger ]

    automatic_contents:
        class: Onm\MachineSearcher
        arguments: [ @cache ]

    acl_checker:
        class: Onm\Security\Acl

    varnish_cleaner:
        class: Onm\Varnish\VarnishCleaner
        arguments: [ %varnish% ]
