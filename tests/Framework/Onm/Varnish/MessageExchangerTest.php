<?php
namespace Onm\Varnish;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-08-13 at 19:27:26.
 */
class MessageExchangerTest extends \PHPUnit\Framework\TestCase
{
    /**
     * @var MessageExchanger
     */
    protected $message_exchanger;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->message_exchanger = new \Onm\Varnish\MessageExchanger();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->message_exchanger = null;
    }

    /**
     * @covers Onm\Varnish\MessageExchanger::addBanMessage
     */
    public function testAddBanMessage()
    {
        // Initialy messages must be empty
        $this->assertEquals($this->message_exchanger->getMessages(), []);

        // After add one message it must increment the number of messages
        $this->message_exchanger->addBanMessage('An example message');
        $this->assertEquals(count($this->message_exchanger->getMessages()), 1);
    }

    /**
     * @covers Onm\Varnish\MessageExchanger::getMessages
     */
    public function testGetMessages()
    {
        // After add one message it has to be in the message list
        $message = 'An example message';
        $this->message_exchanger->addBanMessage($message);

        $registeredMessages = $this->message_exchanger->getMessages();
        $this->assertTrue(in_array($message, $registeredMessages));
    }
}
