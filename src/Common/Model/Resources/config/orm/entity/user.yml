orm:
    metadata:
        -
            name: User
            class: Common\Model\Entity\User
            required:
                - email
                - type
            properties:
                activated:          boolean
                avatar_img_id:      integer
                bio:                string
                bio_description:    string
                categories:         array
                email:              string
                extensions:         array
                id:                 integer
                name:               string
                password:           string
                paywall_time_limit: datetime
                register_date:      datetime
                slug:               string
                terms_accepted:     datetime
                token:              string
                type:               integer
                url:                string
                user_groups:        array
                user_language:      string
                username:           string
            converters:
                default:
                    class:     Opennemas\Orm\Database\Data\Converter\BaseConverter
                    arguments: [ '@orm.metadata.user' ]
            repositories:
                instance:
                    class:     Common\Model\Database\Repository\UserRepository
                    arguments: [ '@orm.connection.instance', '@orm.metadata.user', '@cache.connection.instance' ]
                manager:
                    class:     Opennemas\Orm\Database\Repository\BaseRepository
                    arguments: [ '@orm.connection.manager', '@orm.metadata.user', '@cache.connection.manager' ]
            persisters:
                instance:
                    class:     Common\Model\Database\Persister\InstanceUserPersister
                    arguments: [ '@orm.connection.instance', '@orm.metadata.user', '@cache.connection.instance' ]
                manager:
                    class:     Common\Model\Database\Persister\ManagerUserPersister
                    arguments: [ '@orm.connection.manager', '@orm.metadata.user', '@cache.connection.manager' ]
            mapping:
                database:
                    table: users
                    metas:
                        table: usermeta
                        ids:
                            id: user_id
                    relations:
                        user_groups:
                            table: user_user_group
                            source_key: id
                            target_key: user_id
                            columns:
                                user_id:
                                    type: integer
                                user_group_id:
                                    type: integer
                                status:
                                    type: boolean
                                expires:
                                    type: datetime
                    columns:
                        id:
                            type:    integer
                            options: { autoincrement: true, default: null, length: 20, unsigned: true, }
                        username:
                            type:    string
                            options: { default: null, length: 100, notnull: false }
                        password:
                            type:    string
                            options: { default: null, length: 50, notnull: false }
                        url:
                            type:    string
                            options: { default: null, length: 255, notnull: false }
                        bio:
                            type:    text
                            options: { default: null, length: 65532, notnull: false }
                        avatar_img_id:
                            type:    bigint
                            options: { default: null,  notnull: false, unsigned: true }
                        email:
                            type:    string
                            options: { default: null, length: 255, notnull: false }
                        name:
                            type:    string
                            options: { default: null, length: 100, notnull: false }
                        slug:
                            type:    string
                            options: { default: null, length: 100, notnull: false }
                        type:
                            type:    integer
                            options: { comment: '0 backend - 1 frontend', default: 1, notnull: true, unsigned: true }
                        token:
                            type:    string
                            options: { default: null, length: 32, notnull: false }
                        activated:
                            type:    integer
                            options: { default: 0, notnull: true, unsigned: true }
                    index:
                        -
                            name:    PRIMARY
                            columns: [ id ]
                            primary: true
                            unique:  true
                            flags:   {  }
                        -
                            name:    user_username
                            columns: [ username ]
                            primary: false
                            unique:  false
                            flags:   {  }
                        -
                            name:    user_email
                            columns: [ email ]
                            primary: false
                            unique:  false
                            flags:   {  }
                        -
                            name:    user_slug
                            columns: [ slug ]
                            primary: false
                            unique:  false
                            flags:   {  }
                        -
                            name:    user_type
                            columns: [ type ]
                            primary: false
                            unique:  false
                            flags:   {  }
