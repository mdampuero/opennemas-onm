<?php

namespace Common\ORM\DependencyInjection;

use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\ConfigurationInterface;

/**
 * This is the class that validates and merges configuration from your app/config files
 *
 * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html#cookbook-bundles-extension-config-class}
 */
class Configuration implements ConfigurationInterface
{
    /**
     * {@inheritdoc}
     */
    public function getConfigTreeBuilder()
    {
        $treeBuilder = new TreeBuilder();
        $rootNode = $treeBuilder->root('orm');

        $rootNode
            ->children()
                ->arrayNode('connection')
                    ->prototype('array')
                        ->children()
                            ->scalarNode('name')->end()
                            ->scalarNode('dbname')->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('metadata')
                    ->prototype('array')
                        ->children()
                            ->scalarNode('name')->end()
                            ->arrayNode('enum')
                                ->prototype('array')
                                    ->prototype('scalar')->end()
                                ->end()
                            ->end()
                            ->arrayNode('properties')
                                ->prototype('scalar')->end()
                            ->end()
                            ->arrayNode('required')
                                ->prototype('scalar')->end()
                            ->end()
                            ->arrayNode('translate')
                                ->prototype('scalar')->end()
                            ->end()
                            ->arrayNode('converters')
                                ->prototype('array')
                                    ->children()
                                        ->scalarNode('class')
                                        ->end()
                                        ->arrayNode('arguments')
                                            ->prototype('scalar')->end()
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()
                            ->arrayNode('datasets')
                                ->prototype('array')
                                    ->children()
                                        ->scalarNode('class')
                                        ->end()
                                        ->arrayNode('arguments')
                                            ->prototype('scalar')->end()
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()
                            ->arrayNode('repositories')
                                ->prototype('array')
                                    ->children()
                                        ->scalarNode('class')
                                        ->end()
                                        ->arrayNode('arguments')
                                            ->prototype('variable')->end()
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()
                            ->arrayNode('persisters')
                                ->prototype('array')
                                    ->children()
                                        ->scalarNode('class')
                                        ->end()
                                        ->arrayNode('arguments')
                                            ->prototype('scalar')->end()
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()
                            ->arrayNode('mapping')
                                ->children()
                                    ->arrayNode('braintree')
                                        ->prototype('array')
                                            ->children()
                                                ->scalarNode('name')->end()
                                                ->scalarNode('type')->end()
                                            ->end()
                                        ->end()
                                    ->end()
                                    ->arrayNode('database')
                                        ->children()
                                            ->scalarNode('table')->end()
                                            ->arrayNode('metas')
                                                ->children()
                                                    ->scalarNode('table')->end()
                                                    ->arrayNode('ids')
                                                        ->prototype('scalar')->end()
                                                    ->end()
                                                    ->scalarNode('key')->end()
                                                ->end()
                                            ->end()
                                            ->arrayNode('columns')
                                                ->prototype('array')
                                                    ->children()
                                                        ->scalarNode('type')->end()
                                                        ->arrayNode('options')
                                                            ->prototype('scalar')->end()
                                                        ->end()
                                                    ->end()
                                                ->end()
                                            ->end()
                                            ->arrayNode('index')
                                                ->prototype('array')
                                                    ->children()
                                                        ->scalarNode('name')->end()
                                                        ->arrayNode('columns')
                                                            ->prototype('scalar')->end()
                                                        ->end()
                                                        ->scalarNode('primary')->end()
                                                        ->scalarNode('unique')->end()
                                                        ->arrayNode('flags')
                                                            ->prototype('scalar')->end()
                                                        ->end()
                                                    ->end()
                                                ->end()
                                            ->end()
                                        ->end()
                                    ->end()
                                    ->arrayNode('freshbooks')
                                        ->prototype('array')
                                            ->children()
                                                ->scalarNode('name')->end()
                                                ->scalarNode('type')->end()
                                            ->end()
                                        ->end()
                                    ->end()

                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('schema')
                    ->prototype('array')
                        ->children()
                            ->scalarNode('name')->end()
                            ->arrayNode('entities')
                                ->prototype('scalar')->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
            ->end()
        ;

        return $treeBuilder;
    }
}
