imports:
    - { resource: services/cache.yml }
    - { resource: services/kernel.yml }
    - { resource: services/service.yml }
    - { resource: services/subscriber.yml }

services:
    collector.database:
        class: Framework\DataCollector\DatabaseCollector
        public: false
        arguments: [ '@service_container' ]
        tags:
            -
                name:     data_collector
                id:       'database_collector'
                template: '@OnmFramework/collector/database.html.twig'
                priority: 100

    dbal_connection:
        class: Onm\Database\DbalWrapper
        arguments: [ %database%, %kernel.environment% ]

    category_repository:
        class: Repository\CategoryManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    comment_repository:
        class: Repository\CommentManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    content_views_repository:
        class: Repository\ContentViewsManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    entity_repository:
        class: Repository\EntityManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    frontpage_repository:
        class: Repository\FrontpageManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    user_repository:
        class: Repository\UserManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    menu_repository:
        class: Repository\MenuManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    advertisement_repository:
        class: Repository\AdvertisementManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    opinion_repository:
        class: Repository\OpinionManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    widget_repository:
        class: Repository\WidgetManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    usergroup_repository:
        class: Repository\UserGroupManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    setting_repository:
        class: Repository\SettingManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    newsletter_manager:
        class: Repository\NewsletterManager
        arguments: [ '@dbal_connection', '@cache', %cache_prefix%, '@core.template' ]

    automatic_contents:
        class: Onm\MachineSearcher
        arguments: [ '@orm.connection.instance', '@entity_repository', '@cache', %cache_prefix% ]

    acl_checker:
        class: Onm\Security\Acl

    varnish_cleaner:
        class: Onm\Varnish\BanMessagePusher
        arguments: [ %varnish% ]

    varnish_ban_message_exchanger:
        class: Onm\Varnish\MessageExchanger

    onm_templating:
        class: Onm\Templating\Templating
        arguments: [ '@service_container' ]

    template_cache_manager:
        class: Onm\Templating\Cache\Manager

    template_cache_config_manager:
        class: Onm\Templating\Cache\Config

    content_url_matcher:
        class: Framework\Component\Routing\ContentUrlMatcher
        arguments: [ '@entity_repository' ]

    content_cache:
        class: Framework\Cache\ContentCache

    view:
        alias: onm_templating

    onm.event.authentication_success_listener:
        class: Framework\EventListener\AuthenticationSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

    onm.validator:
        class: Onm\Validator\Validator

    onm.braintree.factory:
        class: Framework\Braintree\BraintreeFactory
        arguments: [ '@comet_cult_braintree.factory' ]

    paginator:
        class: Framework\Component\Paginator\Paginator
        arguments: [ '@router' ]

    related_contents:
        class: RelatedContent
        arguments: [ '@orm.connection.instance', '@entity_repository', '@cache', %cache_prefix% ]

    core.messenger:
        class: Framework\Messenger\Messenger

    core.manager.layout:
        class:     Onm\LayoutManager
        arguments: [ '@onm_templating' ]

    # TODO: Remove arguments when new ORM repositories replace search features
    core.manager.menu:
        class: Repository\MenuManager
        arguments: [ '@dbal_connection', '@cache', %cache_prefix% ]

    news_agency.importer:
        class:     Framework\Import\Importer\Importer
        arguments: [ '@service_container' ]

    vat:
        class: Framework\VAT\VATService
