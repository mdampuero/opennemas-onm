imports:
    - { resource: services/service.yml }
    - { resource: services/subscriber.yml }

parameters:
    core.template.plugins:
        output:
            - ads_generator
            - ads_scripts
            - canonical_url
            - comscore
            - css_includes
            - generate_fb_admin_tag
            - generate_fb_pages_tag
            - google_analytics
            - js_includes
            - meta_amphtml
            - ojd
            - piwik
    core.template.admin.plugins:
    core.template.manager.plugins:
        output:
            - canonical_url
            - css_includes
            - js_includes

services:
    kernel.listener.application_listener:
        class: Framework\EventListener\ApplicationListener
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 0 }

    kernel.listener.controller:
        class: Framework\EventListener\ControllerListener
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }

    kernel.listener.varnish_cleaner:
        class: Framework\EventListener\VarnishCleanerListener
        arguments: [ %varnish%, '@varnish_cleaner', '@varnish_ban_message_exchanger', '@application.log' ]
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelTerminate, priority: 100 }

    kernel.listener.instance_exceptions:
        class: Framework\EventListener\InstanceExceptionsListener
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: 100 }

    kernel.listener.webservice_exceptions:
        class: Framework\EventListener\WebServiceExceptionsListener
        arguments: [ '@core.messenger' ]
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: 100 }

    kernel.listener.access_denied_exceptions:
        class: Framework\EventListener\AccessDeniedExceptionsListener
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: 100 }

    kernel.listener.general_exceptions:
        class: Framework\EventListener\GeneralExceptionsListener
        arguments: [ %kernel.environment% ]
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: 98 }

    kernel.listener.hooks_subscriber:
        class: Framework\EventListener\HooksSubscriber
        arguments: [ '@service_container', '@cache', '@logger' ]
        tags:
            - { name: kernel.event_subscriber }

    kernel.listener.news_agency:
        class: Framework\EventListener\NewsAgencyCronActionSubscriber
        tags:
            - {name: kernel.event_subscriber}

    cache:
        class: %cache_handler%
        arguments: [ %cache_handler_params% ]

    cache_manager:
        class: %cache_handler%
        arguments: [ %cache_handler_params% ]

    collector.onmbrand:
        class: Framework\DataCollector\OpennemasBrandCollector
        public: false
        tags:
            -
                name:     data_collector
                id:       'brand_collector'
                template: '@OnmFramework/collector/onmbrand.html.twig'
                priority: 2000

    collector.database:
        class: Framework\DataCollector\DatabaseCollector
        public: false
        arguments: [ '@orm.connection.instance' ]
        tags:
            -
                name:     data_collector
                id:       'database_collector'
                template: '@OnmFramework/collector/database.html.twig'
                priority: 100

    collector.cache:
        class: Framework\DataCollector\CacheCollector
        public: false
        arguments: [ '@cache' ]
        tags:
            -
                name:     data_collector
                id:       'cache_collector'
                template: '@OnmFramework/collector/cache.html.twig'
                priority: 100

    db_conn:
        class: Onm\DatabaseConnection
        arguments: [ %database% ]

    db_conn_manager:
        class: Onm\DatabaseConnection
        arguments: [  %database% ]

    dbal_connection:
        class: Onm\Database\DbalWrapper
        arguments: [ %database%, %kernel.environment% ]

    dbal_connection_manager:
        class: Onm\Database\DbalWrapper
        arguments: [ %database%, %kernel.environment% ]

    category_repository:
        class: Repository\CategoryManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    comment_repository:
        class: Repository\CommentManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    content_views_repository:
        class: Repository\ContentViewsManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    entity_repository:
        class: Repository\EntityManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    frontpage_repository:
        class: Repository\FrontpageManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    user_repository:
        class: Repository\UserManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    menu_repository:
        class: Repository\MenuManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    advertisement_repository:
        class: Repository\AdvertisementManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    opinion_repository:
        class: Repository\OpinionManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    widget_repository:
        class: Repository\WidgetManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    usergroup_repository:
        class: Repository\UserGroupManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    setting_repository:
        class: Repository\SettingManager
        arguments: [ '@orm.connection.instance', '@cache', %cache_prefix% ]

    newsletter_manager:
        class: Repository\NewsletterManager
        arguments: [ '@dbal_connection', '@cache', %cache_prefix% ]

    automatic_contents:
        class: Onm\MachineSearcher
        arguments: [ '@orm.connection.instance', '@entity_repository', '@cache', %cache_prefix% ]

    acl_checker:
        class: Onm\Security\Acl

    google_recaptcha:
        class: Onm\Recaptcha
        arguments: [ '@setting_repository', %recaptcha_private_key% ]

    recaptcha:
        class: Captcha\Captcha
        calls:
            - [setPrivateKey, [ %recaptcha_private_key% ]]

    varnish_cleaner:
        class: Onm\Varnish\BanMessagePusher
        arguments: [ %varnish% ]

    varnish_ban_message_exchanger:
        class: Onm\Varnish\MessageExchanger

    instance_manager:
        class: Onm\Instance\InstanceManager
        arguments: [ '@orm.connection.instance', '@cache_manager', '@setting_repository' ]

    onm_templating:
        class: Onm\Templating\Templating
        arguments: [ '@service_container' ]

    template_cache_manager:
        class: Onm\Templating\Cache\Manager

    template_cache_config_manager:
        class: Onm\Templating\Cache\Config

    content_url_matcher:
        class: Framework\Component\Routing\ContentUrlMatcher
        arguments: [ '@entity_repository' ]

    content_cache:
        class: Framework\Cache\ContentCache

    view:
        alias: onm_templating

    onm.event.authentication_success_listener:
        class: Framework\EventListener\AuthenticationSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

    onm.validator:
        class: Onm\Validator\Validator

    onm.validator.instance:
        class: Onm\Validator\InstanceValidator
        arguments: [ '@instance_manager' ]

    onm.braintree.factory:
        class: Framework\Braintree\BraintreeFactory
        arguments: [ @comet_cult_braintree.factory ]

    paginator:
        class: Framework\Component\Paginator\Paginator
        arguments: [ '@router' ]

    onm.framework_status:
        class: Onm\Framework\Status
        arguments: [ '@service_container' ]

    related_contents:
        class: RelatedContent
        arguments: [ '@orm.connection.instance', '@entity_repository', '@cache', %cache_prefix% ]

    core.event_dispatcher:
        class: Framework\Component\EventDispatcher\EventDispatcher
        arguments: [ '@event_dispatcher' ]

    core.messenger:
        class: Framework\Messenger\Messenger

    vat:
        class: Framework\VAT\VATService

    core.manager.advertisement:
        class: AdvertisementPositions

    core.manager.layout:
        class:     Onm\LayoutManager
        arguments: [ '@core.template.admin' ]

    # TODO: Remove arguments when new ORM repositories replace search features
    core.manager.menu:
        class: Repository\MenuManager
        arguments: [ '@dbal_connection', '@cache', %cache_prefix% ]

    core.template:
        class: Template
        arguments: [ '@service_container', '%core.template.plugins%' ]

    core.template.admin:
        class: TemplateAdmin
        arguments: [ '@service_container', '%core.template.admin.plugins%' ]

    core.template.manager:
        class: Template
        arguments: [ '@service_container', '%core.template.manager.plugins%' ]

    core.listener.annotation.template:
        class:     Framework\EventListener\TemplateAnnotationListener
        arguments: [ '@service_container' ]
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }
